{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Import ecommerce datasets\n",
    "\n",
    "import pandas as pd\n",
    "df1 = pd.read_csv(\"/Users/tomilayoibrahim/Desktop/ecommerce_shop/2019_Dec.csv\")\n",
    "df2 = pd.read_csv(\"/Users/tomilayoibrahim/Desktop/ecommerce_shop/2019_Nov.csv\")\n",
    "df3 = pd.read_csv(\"/Users/tomilayoibrahim/Desktop/ecommerce_shop/2019_Oct.csv\")\n",
    "df4 = pd.read_csv(\"/Users/tomilayoibrahim/Desktop/ecommerce_shop/2020_Feb.csv\")\n",
    "df5 = pd.read_csv(\"/Users/tomilayoibrahim/Desktop/ecommerce_shop/2020_Jan.csv\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Merge ecommerce store 5-mnth period data\n",
    "ecommdf = pd.concat([df1,df2,df3,df4,df5])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(20692840, 9)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check how much data ecommdf contains\n",
    "len(ecommdf)\n",
    "ecommdf.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>event_time</th>\n",
       "      <th>event_type</th>\n",
       "      <th>product_id</th>\n",
       "      <th>category_id</th>\n",
       "      <th>category_code</th>\n",
       "      <th>brand</th>\n",
       "      <th>price</th>\n",
       "      <th>user_id</th>\n",
       "      <th>user_session</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-12-01 00:00:00 UTC</td>\n",
       "      <td>remove_from_cart</td>\n",
       "      <td>5712790</td>\n",
       "      <td>1487580005268456287</td>\n",
       "      <td>NaN</td>\n",
       "      <td>f.o.x</td>\n",
       "      <td>6.27</td>\n",
       "      <td>576802932</td>\n",
       "      <td>51d85cb0-897f-48d2-918b-ad63965c12dc</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019-12-01 00:00:00 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>5764655</td>\n",
       "      <td>1487580005411062629</td>\n",
       "      <td>NaN</td>\n",
       "      <td>cnd</td>\n",
       "      <td>29.05</td>\n",
       "      <td>412120092</td>\n",
       "      <td>8adff31e-2051-4894-9758-224bfa8aec18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019-12-01 00:00:02 UTC</td>\n",
       "      <td>cart</td>\n",
       "      <td>4958</td>\n",
       "      <td>1487580009471148064</td>\n",
       "      <td>NaN</td>\n",
       "      <td>runail</td>\n",
       "      <td>1.19</td>\n",
       "      <td>494077766</td>\n",
       "      <td>c99a50e8-2fac-4c4d-89ec-41c05f114554</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2019-12-01 00:00:05 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>5848413</td>\n",
       "      <td>1487580007675986893</td>\n",
       "      <td>NaN</td>\n",
       "      <td>freedecor</td>\n",
       "      <td>0.79</td>\n",
       "      <td>348405118</td>\n",
       "      <td>722ffea5-73c0-4924-8e8f-371ff8031af4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019-12-01 00:00:07 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>5824148</td>\n",
       "      <td>1487580005511725929</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.56</td>\n",
       "      <td>576005683</td>\n",
       "      <td>28172809-7e4a-45ce-bab0-5efa90117cd5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                event_time        event_type  product_id          category_id  \\\n",
       "0  2019-12-01 00:00:00 UTC  remove_from_cart     5712790  1487580005268456287   \n",
       "1  2019-12-01 00:00:00 UTC              view     5764655  1487580005411062629   \n",
       "2  2019-12-01 00:00:02 UTC              cart        4958  1487580009471148064   \n",
       "3  2019-12-01 00:00:05 UTC              view     5848413  1487580007675986893   \n",
       "4  2019-12-01 00:00:07 UTC              view     5824148  1487580005511725929   \n",
       "\n",
       "  category_code      brand  price    user_id  \\\n",
       "0           NaN      f.o.x   6.27  576802932   \n",
       "1           NaN        cnd  29.05  412120092   \n",
       "2           NaN     runail   1.19  494077766   \n",
       "3           NaN  freedecor   0.79  348405118   \n",
       "4           NaN        NaN   5.56  576005683   \n",
       "\n",
       "                           user_session  \n",
       "0  51d85cb0-897f-48d2-918b-ad63965c12dc  \n",
       "1  8adff31e-2051-4894-9758-224bfa8aec18  \n",
       "2  c99a50e8-2fac-4c4d-89ec-41c05f114554  \n",
       "3  722ffea5-73c0-4924-8e8f-371ff8031af4  \n",
       "4  28172809-7e4a-45ce-bab0-5efa90117cd5  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ecommdf.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 20692840 entries, 0 to 4264751\n",
      "Data columns (total 9 columns):\n",
      " #   Column         Dtype  \n",
      "---  ------         -----  \n",
      " 0   event_time     object \n",
      " 1   event_type     object \n",
      " 2   product_id     int64  \n",
      " 3   category_id    int64  \n",
      " 4   category_code  object \n",
      " 5   brand          object \n",
      " 6   price          float64\n",
      " 7   user_id        int64  \n",
      " 8   user_session   object \n",
      "dtypes: float64(1), int64(3), object(5)\n",
      "memory usage: 1.5+ GB\n"
     ]
    }
   ],
   "source": [
    "#Display attributes and datatypes\n",
    "ecommdf.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>product_id</th>\n",
       "      <th>category_id</th>\n",
       "      <th>price</th>\n",
       "      <th>user_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2.069284e+07</td>\n",
       "      <td>2.069284e+07</td>\n",
       "      <td>2.069284e+07</td>\n",
       "      <td>2.069284e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>5.484297e+06</td>\n",
       "      <td>1.554230e+18</td>\n",
       "      <td>8.534735e+00</td>\n",
       "      <td>5.215527e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.305716e+06</td>\n",
       "      <td>1.691038e+17</td>\n",
       "      <td>1.938142e+01</td>\n",
       "      <td>8.744312e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>3.752000e+03</td>\n",
       "      <td>1.487580e+18</td>\n",
       "      <td>-7.937000e+01</td>\n",
       "      <td>4.654960e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>5.724650e+06</td>\n",
       "      <td>1.487580e+18</td>\n",
       "      <td>2.060000e+00</td>\n",
       "      <td>4.818306e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5.810720e+06</td>\n",
       "      <td>1.487580e+18</td>\n",
       "      <td>4.050000e+00</td>\n",
       "      <td>5.531297e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>5.857864e+06</td>\n",
       "      <td>1.487580e+18</td>\n",
       "      <td>7.060000e+00</td>\n",
       "      <td>5.788573e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>5.932595e+06</td>\n",
       "      <td>2.242903e+18</td>\n",
       "      <td>3.277800e+02</td>\n",
       "      <td>6.220902e+08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         product_id   category_id         price       user_id\n",
       "count  2.069284e+07  2.069284e+07  2.069284e+07  2.069284e+07\n",
       "mean   5.484297e+06  1.554230e+18  8.534735e+00  5.215527e+08\n",
       "std    1.305716e+06  1.691038e+17  1.938142e+01  8.744312e+07\n",
       "min    3.752000e+03  1.487580e+18 -7.937000e+01  4.654960e+05\n",
       "25%    5.724650e+06  1.487580e+18  2.060000e+00  4.818306e+08\n",
       "50%    5.810720e+06  1.487580e+18  4.050000e+00  5.531297e+08\n",
       "75%    5.857864e+06  1.487580e+18  7.060000e+00  5.788573e+08\n",
       "max    5.932595e+06  2.242903e+18  3.277800e+02  6.220902e+08"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Describe ecommdf\n",
    "ecommdf.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>event_time</th>\n",
       "      <th>event_type</th>\n",
       "      <th>category_code</th>\n",
       "      <th>brand</th>\n",
       "      <th>user_session</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>20692840</td>\n",
       "      <td>20692840</td>\n",
       "      <td>353594</td>\n",
       "      <td>11935723</td>\n",
       "      <td>20688242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>8782890</td>\n",
       "      <td>4</td>\n",
       "      <td>12</td>\n",
       "      <td>273</td>\n",
       "      <td>4535941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>2020-02-15 16:08:37 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>appliances.environment.vacuum</td>\n",
       "      <td>runail</td>\n",
       "      <td>74206ba1-c863-4760-bbdc-b11777059e46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>3087</td>\n",
       "      <td>9657821</td>\n",
       "      <td>149168</td>\n",
       "      <td>1528908</td>\n",
       "      <td>5411</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     event_time event_type                  category_code  \\\n",
       "count                  20692840   20692840                         353594   \n",
       "unique                  8782890          4                             12   \n",
       "top     2020-02-15 16:08:37 UTC       view  appliances.environment.vacuum   \n",
       "freq                       3087    9657821                         149168   \n",
       "\n",
       "           brand                          user_session  \n",
       "count   11935723                              20688242  \n",
       "unique       273                               4535941  \n",
       "top       runail  74206ba1-c863-4760-bbdc-b11777059e46  \n",
       "freq     1528908                                  5411  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Describe ecommdf\n",
    "ecommdf.describe(include=np.object)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "view                9657821\n",
       "cart                5768333\n",
       "remove_from_cart    3979679\n",
       "purchase            1287007\n",
       "Name: event_type, dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ecommdf['event_type'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "#matplotlib inline\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'value_count (10,000)')"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "event_type = ['view', 'cart', 'remove_from_cart', 'purchase']\n",
    "value_counts= [0,100000, 200000, 30000]\n",
    "\n",
    "plt.plot(event_type, value_counts)\n",
    "plt.xlabel('event_type')\n",
    "plt.ylabel('value_count (10,000)')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5809910    141650\n",
       "5809912     55606\n",
       "5700037     51111\n",
       "5802432     45008\n",
       "5854897     44799\n",
       "            ...  \n",
       "5679334         1\n",
       "5679343         1\n",
       "5679339         1\n",
       "5695581         1\n",
       "5616969         1\n",
       "Name: product_id, Length: 54571, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Popular Product \n",
    "ecommdf['product_id'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "runail       1528908\n",
       "irisk        1033852\n",
       "masura        861763\n",
       "grattol       852591\n",
       "bpw.style     434813\n",
       "ingarden      430958\n",
       "estel         360912\n",
       "kapous        324394\n",
       "jessnail      252996\n",
       "uno           250377\n",
       "Name: brand, dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Best selling brands\n",
    "Best_selling_brands = ecommdf['brand'].value_counts()\n",
    "Best_selling_brands.head(10)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'value_counts (10,000)')"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#######Best_selling_brands = ['runail', 'irisk', 'masura', 'grattol','bpw.style', 'ingarden','estel','kapous','jessnail','uno']\n",
    "value_counts = [0,10000, 20000, 30000, 40000,50000,60000,70000,80000,90000]\n",
    "\n",
    "plt.plot(Best_selling_brands, value_counts)\n",
    "plt.xlabel('Brands')\n",
    "plt.ylabel('value_counts (10,000)')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "view                9657821\n",
       "cart                5768333\n",
       "remove_from_cart    3979679\n",
       "purchase            1287007\n",
       "Name: event_type, dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ecommdf['event_type'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>event_time</th>\n",
       "      <th>event_type</th>\n",
       "      <th>product_id</th>\n",
       "      <th>category_id</th>\n",
       "      <th>category_code</th>\n",
       "      <th>brand</th>\n",
       "      <th>price</th>\n",
       "      <th>user_id</th>\n",
       "      <th>user_session</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>557</th>\n",
       "      <td>2019-12-01 00:17:50 UTC</td>\n",
       "      <td>purchase</td>\n",
       "      <td>4554</td>\n",
       "      <td>1487580010796548183</td>\n",
       "      <td>NaN</td>\n",
       "      <td>runail</td>\n",
       "      <td>0.38</td>\n",
       "      <td>473613801</td>\n",
       "      <td>d1e90c6a-c030-4d06-aaaf-6d12ec502bb9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>558</th>\n",
       "      <td>2019-12-01 00:17:50 UTC</td>\n",
       "      <td>purchase</td>\n",
       "      <td>4600</td>\n",
       "      <td>1487580010796548183</td>\n",
       "      <td>NaN</td>\n",
       "      <td>runail</td>\n",
       "      <td>0.38</td>\n",
       "      <td>473613801</td>\n",
       "      <td>d1e90c6a-c030-4d06-aaaf-6d12ec502bb9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>559</th>\n",
       "      <td>2019-12-01 00:17:50 UTC</td>\n",
       "      <td>purchase</td>\n",
       "      <td>4607</td>\n",
       "      <td>1487580010796548183</td>\n",
       "      <td>NaN</td>\n",
       "      <td>runail</td>\n",
       "      <td>0.38</td>\n",
       "      <td>473613801</td>\n",
       "      <td>d1e90c6a-c030-4d06-aaaf-6d12ec502bb9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>560</th>\n",
       "      <td>2019-12-01 00:17:50 UTC</td>\n",
       "      <td>purchase</td>\n",
       "      <td>4640</td>\n",
       "      <td>1487580011157258342</td>\n",
       "      <td>NaN</td>\n",
       "      <td>runail</td>\n",
       "      <td>0.37</td>\n",
       "      <td>473613801</td>\n",
       "      <td>d1e90c6a-c030-4d06-aaaf-6d12ec502bb9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>561</th>\n",
       "      <td>2019-12-01 00:17:50 UTC</td>\n",
       "      <td>purchase</td>\n",
       "      <td>4689</td>\n",
       "      <td>1487580010796548183</td>\n",
       "      <td>NaN</td>\n",
       "      <td>runail</td>\n",
       "      <td>0.38</td>\n",
       "      <td>473613801</td>\n",
       "      <td>d1e90c6a-c030-4d06-aaaf-6d12ec502bb9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4264714</th>\n",
       "      <td>2020-01-31 23:58:26 UTC</td>\n",
       "      <td>purchase</td>\n",
       "      <td>5730206</td>\n",
       "      <td>1487580005092295511</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10.32</td>\n",
       "      <td>604470329</td>\n",
       "      <td>6f853f2d-e1aa-49d4-84d8-284566ea1a0e</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4264715</th>\n",
       "      <td>2020-01-31 23:58:26 UTC</td>\n",
       "      <td>purchase</td>\n",
       "      <td>5861342</td>\n",
       "      <td>1487580010645553231</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.90</td>\n",
       "      <td>604470329</td>\n",
       "      <td>6f853f2d-e1aa-49d4-84d8-284566ea1a0e</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4264716</th>\n",
       "      <td>2020-01-31 23:58:26 UTC</td>\n",
       "      <td>purchase</td>\n",
       "      <td>5867185</td>\n",
       "      <td>1487580007910867929</td>\n",
       "      <td>NaN</td>\n",
       "      <td>staleks</td>\n",
       "      <td>11.43</td>\n",
       "      <td>604470329</td>\n",
       "      <td>6f853f2d-e1aa-49d4-84d8-284566ea1a0e</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4264717</th>\n",
       "      <td>2020-01-31 23:58:26 UTC</td>\n",
       "      <td>purchase</td>\n",
       "      <td>5877766</td>\n",
       "      <td>1605161575889502297</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.76</td>\n",
       "      <td>604470329</td>\n",
       "      <td>6f853f2d-e1aa-49d4-84d8-284566ea1a0e</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4264718</th>\n",
       "      <td>2020-01-31 23:58:26 UTC</td>\n",
       "      <td>purchase</td>\n",
       "      <td>5905704</td>\n",
       "      <td>1487580005092295511</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10.63</td>\n",
       "      <td>604470329</td>\n",
       "      <td>6f853f2d-e1aa-49d4-84d8-284566ea1a0e</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1287007 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      event_time event_type  product_id          category_id  \\\n",
       "557      2019-12-01 00:17:50 UTC   purchase        4554  1487580010796548183   \n",
       "558      2019-12-01 00:17:50 UTC   purchase        4600  1487580010796548183   \n",
       "559      2019-12-01 00:17:50 UTC   purchase        4607  1487580010796548183   \n",
       "560      2019-12-01 00:17:50 UTC   purchase        4640  1487580011157258342   \n",
       "561      2019-12-01 00:17:50 UTC   purchase        4689  1487580010796548183   \n",
       "...                          ...        ...         ...                  ...   \n",
       "4264714  2020-01-31 23:58:26 UTC   purchase     5730206  1487580005092295511   \n",
       "4264715  2020-01-31 23:58:26 UTC   purchase     5861342  1487580010645553231   \n",
       "4264716  2020-01-31 23:58:26 UTC   purchase     5867185  1487580007910867929   \n",
       "4264717  2020-01-31 23:58:26 UTC   purchase     5877766  1605161575889502297   \n",
       "4264718  2020-01-31 23:58:26 UTC   purchase     5905704  1487580005092295511   \n",
       "\n",
       "        category_code    brand  price    user_id  \\\n",
       "557               NaN   runail   0.38  473613801   \n",
       "558               NaN   runail   0.38  473613801   \n",
       "559               NaN   runail   0.38  473613801   \n",
       "560               NaN   runail   0.37  473613801   \n",
       "561               NaN   runail   0.38  473613801   \n",
       "...               ...      ...    ...        ...   \n",
       "4264714           NaN      NaN  10.32  604470329   \n",
       "4264715           NaN      NaN   1.90  604470329   \n",
       "4264716           NaN  staleks  11.43  604470329   \n",
       "4264717           NaN      NaN   4.76  604470329   \n",
       "4264718           NaN      NaN  10.63  604470329   \n",
       "\n",
       "                                 user_session  \n",
       "557      d1e90c6a-c030-4d06-aaaf-6d12ec502bb9  \n",
       "558      d1e90c6a-c030-4d06-aaaf-6d12ec502bb9  \n",
       "559      d1e90c6a-c030-4d06-aaaf-6d12ec502bb9  \n",
       "560      d1e90c6a-c030-4d06-aaaf-6d12ec502bb9  \n",
       "561      d1e90c6a-c030-4d06-aaaf-6d12ec502bb9  \n",
       "...                                       ...  \n",
       "4264714  6f853f2d-e1aa-49d4-84d8-284566ea1a0e  \n",
       "4264715  6f853f2d-e1aa-49d4-84d8-284566ea1a0e  \n",
       "4264716  6f853f2d-e1aa-49d4-84d8-284566ea1a0e  \n",
       "4264717  6f853f2d-e1aa-49d4-84d8-284566ea1a0e  \n",
       "4264718  6f853f2d-e1aa-49d4-84d8-284566ea1a0e  \n",
       "\n",
       "[1287007 rows x 9 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Products Purchased by Brand Name\n",
    "\n",
    "Products_purchased = ecommdf.loc[ecommdf.event_type == 'purchase']\n",
    "Products_purchased\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>len</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>brand</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>runail</th>\n",
       "      <td>111408</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>irisk</th>\n",
       "      <td>73806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>masura</th>\n",
       "      <td>49751</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>grattol</th>\n",
       "      <td>49542</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bpw.style</th>\n",
       "      <td>37943</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ingarden</th>\n",
       "      <td>27411</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>estel</th>\n",
       "      <td>19438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>uno</th>\n",
       "      <td>17586</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freedecor</th>\n",
       "      <td>17467</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>italwax</th>\n",
       "      <td>17105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kapous</th>\n",
       "      <td>16335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>domix</th>\n",
       "      <td>12958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>milv</th>\n",
       "      <td>12691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>haruyama</th>\n",
       "      <td>11582</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>pole</th>\n",
       "      <td>11578</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bluesky</th>\n",
       "      <td>11509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>jessnail</th>\n",
       "      <td>9661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>concept</th>\n",
       "      <td>9530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>severina</th>\n",
       "      <td>9173</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>zinger</th>\n",
       "      <td>9022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>nagaraku</th>\n",
       "      <td>7915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>cnd</th>\n",
       "      <td>7686</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>airnails</th>\n",
       "      <td>7504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>de.lux</th>\n",
       "      <td>7072</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>lovely</th>\n",
       "      <td>7010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>cosmoprofi</th>\n",
       "      <td>6973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>lianail</th>\n",
       "      <td>6642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>yoko</th>\n",
       "      <td>6628</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>staleks</th>\n",
       "      <td>5811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>uskusi</th>\n",
       "      <td>5708</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>f.o.x</th>\n",
       "      <td>5292</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>oniq</th>\n",
       "      <td>4757</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>beautix</th>\n",
       "      <td>4721</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>roubloff</th>\n",
       "      <td>4644</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>pnb</th>\n",
       "      <td>4633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>metzger</th>\n",
       "      <td>4262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>art-visage</th>\n",
       "      <td>4253</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>swarovski</th>\n",
       "      <td>4031</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>smart</th>\n",
       "      <td>3819</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>farmstay</th>\n",
       "      <td>3356</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>browxenna</th>\n",
       "      <td>3231</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kinetics</th>\n",
       "      <td>3206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rosi</th>\n",
       "      <td>3183</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>levrana</th>\n",
       "      <td>2611</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>markell</th>\n",
       "      <td>2587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>solomeya</th>\n",
       "      <td>2408</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>levissime</th>\n",
       "      <td>2234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dizao</th>\n",
       "      <td>2201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>benovy</th>\n",
       "      <td>2180</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>kaaral</th>\n",
       "      <td>2115</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               len\n",
       "brand             \n",
       "runail      111408\n",
       "irisk        73806\n",
       "masura       49751\n",
       "grattol      49542\n",
       "bpw.style    37943\n",
       "ingarden     27411\n",
       "estel        19438\n",
       "uno          17586\n",
       "freedecor    17467\n",
       "italwax      17105\n",
       "kapous       16335\n",
       "domix        12958\n",
       "milv         12691\n",
       "haruyama     11582\n",
       "pole         11578\n",
       "bluesky      11509\n",
       "jessnail      9661\n",
       "concept       9530\n",
       "severina      9173\n",
       "zinger        9022\n",
       "nagaraku      7915\n",
       "cnd           7686\n",
       "airnails      7504\n",
       "de.lux        7072\n",
       "lovely        7010\n",
       "cosmoprofi    6973\n",
       "lianail       6642\n",
       "yoko          6628\n",
       "staleks       5811\n",
       "uskusi        5708\n",
       "f.o.x         5292\n",
       "oniq          4757\n",
       "beautix       4721\n",
       "roubloff      4644\n",
       "pnb           4633\n",
       "metzger       4262\n",
       "art-visage    4253\n",
       "swarovski     4031\n",
       "smart         3819\n",
       "farmstay      3356\n",
       "browxenna     3231\n",
       "kinetics      3206\n",
       "rosi          3183\n",
       "levrana       2611\n",
       "markell       2587\n",
       "solomeya      2408\n",
       "levissime     2234\n",
       "dizao         2201\n",
       "benovy        2180\n",
       "kaaral        2115"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Top 50 selling Brands\n",
    "Best_selling_brands = Products_purchased.groupby('brand').brand.agg([len]).sort_values(by= 'len', ascending = False)\n",
    "Best_selling_brands.head(50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x124ed2b50>"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "Best_selling_brands.head(30).plot(kind = \"bar\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>len</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>user_id</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>480463194</th>\n",
       "      <td>715</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>469299888</th>\n",
       "      <td>603</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>556579890</th>\n",
       "      <td>506</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>381816972</th>\n",
       "      <td>500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>601469771</th>\n",
       "      <td>461</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>557790271</th>\n",
       "      <td>438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>473313149</th>\n",
       "      <td>417</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>517825140</th>\n",
       "      <td>412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>247216055</th>\n",
       "      <td>409</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>566439116</th>\n",
       "      <td>409</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>431950134</th>\n",
       "      <td>400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>575709540</th>\n",
       "      <td>399</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>471197852</th>\n",
       "      <td>389</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>548209402</th>\n",
       "      <td>375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>531900924</th>\n",
       "      <td>372</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>150318419</th>\n",
       "      <td>370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>483574352</th>\n",
       "      <td>346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>546827800</th>\n",
       "      <td>329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>620029655</th>\n",
       "      <td>324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>539691934</th>\n",
       "      <td>319</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>539636703</th>\n",
       "      <td>317</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>493840329</th>\n",
       "      <td>316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>351818112</th>\n",
       "      <td>312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>564296564</th>\n",
       "      <td>306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>386491215</th>\n",
       "      <td>301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378471818</th>\n",
       "      <td>293</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>538580192</th>\n",
       "      <td>288</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>565156776</th>\n",
       "      <td>285</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>391667725</th>\n",
       "      <td>283</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>455746244</th>\n",
       "      <td>280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>568038555</th>\n",
       "      <td>277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>578915216</th>\n",
       "      <td>273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>572081598</th>\n",
       "      <td>273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>573823111</th>\n",
       "      <td>268</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>582804703</th>\n",
       "      <td>264</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172974485</th>\n",
       "      <td>262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>514908450</th>\n",
       "      <td>262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>525207529</th>\n",
       "      <td>259</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>507727824</th>\n",
       "      <td>257</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549507462</th>\n",
       "      <td>256</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>565036131</th>\n",
       "      <td>255</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>596971707</th>\n",
       "      <td>255</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>520672512</th>\n",
       "      <td>254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>536575089</th>\n",
       "      <td>253</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>603178692</th>\n",
       "      <td>252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>502220691</th>\n",
       "      <td>252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>544606172</th>\n",
       "      <td>251</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>493285103</th>\n",
       "      <td>249</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>532248612</th>\n",
       "      <td>249</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>516204225</th>\n",
       "      <td>245</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           len\n",
       "user_id       \n",
       "480463194  715\n",
       "469299888  603\n",
       "556579890  506\n",
       "381816972  500\n",
       "601469771  461\n",
       "557790271  438\n",
       "473313149  417\n",
       "517825140  412\n",
       "247216055  409\n",
       "566439116  409\n",
       "431950134  400\n",
       "575709540  399\n",
       "471197852  389\n",
       "548209402  375\n",
       "531900924  372\n",
       "150318419  370\n",
       "483574352  346\n",
       "546827800  329\n",
       "620029655  324\n",
       "539691934  319\n",
       "539636703  317\n",
       "493840329  316\n",
       "351818112  312\n",
       "564296564  306\n",
       "386491215  301\n",
       "378471818  293\n",
       "538580192  288\n",
       "565156776  285\n",
       "391667725  283\n",
       "455746244  280\n",
       "568038555  277\n",
       "578915216  273\n",
       "572081598  273\n",
       "573823111  268\n",
       "582804703  264\n",
       "172974485  262\n",
       "514908450  262\n",
       "525207529  259\n",
       "507727824  257\n",
       "549507462  256\n",
       "565036131  255\n",
       "596971707  255\n",
       "520672512  254\n",
       "536575089  253\n",
       "603178692  252\n",
       "502220691  252\n",
       "544606172  251\n",
       "493285103  249\n",
       "532248612  249\n",
       "516204225  245"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Top 50 Users (Customers). store can target this group with special discounts for cotinuing loyalty\n",
    "Top_customers = Products_purchased.groupby('user_id').user_id.agg([len]).sort_values(by= 'len', ascending = False)\n",
    "Top_customers.head(50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x129cb10a0>"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXcAAAE3CAYAAABRmAGSAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO2debgcRdW435OFNZCQEAMmhEQWAZElBAKCssnmAgjI9ikBkfgJCoIoQfyMCiq4IC6AP2QHMbJpIpuBEETFGJIQAiFgAgRIZAn7Ltv5/XFquH1rema65s7c3DTnfZ5+pqf6TM/pqurT1VWn6oiq4jiO45SLXstaAcdxHKf1uHF3HMcpIW7cHcdxSogbd8dxnBLixt1xHKeEuHF3HMcpIX2WtQIAa665po4YMWJZq+E4jrNcMWvWrKdVdXDesR5h3EeMGMHMmTOXtRqO4zjLFSLySK1j3i3jOI5TQty4O47jlBA37o7jOCWkR/S5O47jtIM333yTxYsX8/rrry9rVbrESiutxLBhw+jbt2/h37hxdxyntCxevJjVVluNESNGICLLWp2mUFWeeeYZFi9ezMiRIwv/zrtlHMcpLa+//jqDBg1abg07gIgwaNCg5LcPN+6O45Sa5dmwV2jmGty4O47jtIl+/fots//ucX3uI8ZfX5W26PRPLgNNHMcpG3n2pSv0ZNvUsOUuIh8UkTmZ7UUR+ZqIDBSRm0VkQfhcI8iLiPxSRBaKyFwRGdX+y3Acx+nZ/OQnP2Hrrbdms802Y8KECQAsWrSIjTfemKOOOooPfehD7L777rz22mst+b+Gxl1VH1DVLVR1C2Ar4FXgj8B4YKqqbgBMDd8B9gI2CNs44NyWaOo4jrOcMmXKFBYsWMCMGTOYM2cOs2bN4vbbbwdgwYIFHHPMMcybN48BAwZwzTXXtOQ/U7tldgUeVNVHRGQfYKeQfglwG3ASsA9wqVpw1ukiMkBE1lbVx1uiseM4znLGlClTmDJlCltuuSUAL7/8MgsWLGD48OGMHDmSLbbYAoCtttqKRYsWteQ/U437wcDvw/6QjMF+AhgS9ocCj2V+szikuXF3HOc9iapy8skn86UvfalT+qJFi1hxxRXf/d67d+/u65apICIrAHsDV8XHQitdU/5YRMaJyEwRmbl06dKUnzqO4yxX7LHHHlx44YW8/PLLACxZsoSnnnqqrf+Z0nLfC5itqk+G709WultEZG2goukSYJ3M74aFtE6o6nnAeQCjR49OejA4juMsT+y+++7Mnz+f7bbbDjAXycsvv5zevXu37T9TjPshdHTJAEwGxgKnh89JmfSviMhEYAzwgve3O47TE+hu18VKSx3guOOO47jjjquSuffee9/dP/HEE1v234WMu4isCuwGZDuMTgeuFJEjgUeAA0P6DcAngIWYZ80RLdPWcRzHKUQh466qrwCDorRnMO+ZWFaBY1qineM4jtMUvvyA4zhOCXHj7jhOqbHOhOWbZq7BjbvjOKVlpZVW4plnnlmuDXxlPfeVVlop6Xc9buEwx3GcVjFs2DAWL17M8j6XphKJKQU37o7jlJa+ffsmRS8qE94t4ziOU0LcuDuO45QQN+6O4zglxI274zhOCXHj7jiOU0LcuDuO45QQN+6O4zglxI274zhOCXHj7jiOU0LcuDuO45QQN+6O4zglxI274zhOCXHj7jiOU0LcuDuO45QQN+6O4zglpJBxF5EBInK1iNwvIvNFZDsRGSgiN4vIgvC5RpAVEfmliCwUkbkiMqq9l+A4juPEFG25/wK4SVU3AjYH5gPjgamqugEwNXwH2AvYIGzjgHNbqrHjOI7TkIbGXUT6Ax8DLgBQ1TdU9XlgH+CSIHYJsG/Y3we4VI3pwAARWbvlmjuO4zg1KRJmbySwFLhIRDYHZgHHAUNU9fEg8wQwJOwPBR7L/H5xSHucFjNi/PW56YtO/2Sr/8pxHGe5oki3TB9gFHCuqm4JvEJHFwwAaqHFk8KLi8g4EZkpIjOX9+C1juM4PY0ixn0xsFhV/xW+X40Z+ycr3S3h86lwfAmwTub3w0JaJ1T1PFUdraqjBw8e3Kz+juM4Tg4NjbuqPgE8JiIfDEm7AvcBk4GxIW0sMCnsTwYOC14z2wIvZLpvHMdxnG6gSJ87wFeB34nICsBDwBHYg+FKETkSeAQ4MMjeAHwCWAi8GmQdx3GcbqSQcVfVOcDonEO75sgqcEwX9XIcx3G6gM9QdRzHKSFu3B3HcUqIG3fHcZwS4sbdcRynhLhxdxzHKSFu3B3HcUqIG3fHcZwS4sbdcRynhLhxdxzHKSFu3B3HcUqIG3fHcZwS4sbdcRynhLhxdxzHKSFu3B3HcUqIG3fHcZwS4sbdcRynhLhxdxzHKSFu3B3HcUqIG3fHcZwS4sbdcRynhBQy7iKySETuEZE5IjIzpA0UkZtFZEH4XCOki4j8UkQWishcERnVzgtwHMdxqklpue+sqluo6ujwfTwwVVU3AKaG7wB7ARuEbRxwbquUdRzHcYrRpwu/3QfYKexfAtwGnBTSL1VVBaaLyAARWVtVH++Kol1lxPjrc9MXnf7JbtbEcRyn/RRtuSswRURmici4kDYkY7CfAIaE/aHAY5nfLg5pjuM4TjdRtOW+g6ouEZH3ATeLyP3Zg6qqIqIpfxweEuMAhg8fnvLTtuOtfMdxlncKtdxVdUn4fAr4I7AN8KSIrA0QPp8K4kuAdTI/HxbS4nOep6qjVXX04MGDm78Cx3Ecp4qGxl1EVhWR1Sr7wO7AvcBkYGwQGwtMCvuTgcOC18y2wAvLur/dcRznvUaRbpkhwB9FpCJ/hareJCJ3AleKyJHAI8CBQf4G4BPAQuBV4IiWa+04juPUpaFxV9WHgM1z0p8Bds1JV+CYlmjnOI7jNIXPUHUcxykhbtwdx3FKiBt3x3GcEuLG3XEcp4S4cXccxykhbtwdx3FKSFcWDnMCecsV+FIFjuMsS7zl7jiOU0LcuDuO45QQN+6O4zglxI274zhOCXHj7jiOU0LcuDuO45QQd4XsZtxt0nGc7sBb7o7jOCXEjbvjOE4JcePuOI5TQty4O47jlBA37o7jOCXEvWV6MO5Z4zhOsxQ27iLSG5gJLFHVT4nISGAiMAiYBXxeVd8QkRWBS4GtgGeAg1R1Ucs1dzqR9yAAfxg4znuVlJb7ccB8YPXw/Qzg56o6UUR+AxwJnBs+n1PV9UXk4CB3UAt1drpIyoPAHxqOs3xSqM9dRIYBnwTOD98F2AW4OohcAuwb9vcJ3wnHdw3yjuM4TjdRdED1LOCbwDvh+yDgeVV9K3xfDAwN+0OBxwDC8ReCvOM4jtNNNOyWEZFPAU+p6iwR2alVfywi44BxAMOHD2/VaZ1lSGoXjg8YO077KNJy3x7YW0QWYQOouwC/AAaISOXhMAxYEvaXAOsAhOP9sYHVTqjqeao6WlVHDx48uEsX4TiO43SmoXFX1ZNVdZiqjgAOBm5V1f8BpgEHBLGxwKSwPzl8Jxy/VVW1pVo7juM4demKn/tJwEQROQ24C7ggpF8AXCYiC4FnsQeC43QJ78JxnDSSjLuq3gbcFvYfArbJkXkd+GwLdHMcx3GaxJcfcBzHKSFu3B3HcUqIry3jlA6fVes4btyd9zi+FINTVrxbxnEcp4S4cXccxykhbtwdx3FKiBt3x3GcEuLG3XEcp4S4cXccxykh7grpOG3A3SadZY233B3HcUqIG3fHcZwS4sbdcRynhLhxdxzHKSE+oOo4PQAPRuK0Gm+5O47jlBBvuTvOcoa38p0iuHF3nBLjD4L3Lm7cHccBfG37stHQuIvISsDtwIpB/mpVnSAiI4GJwCBgFvB5VX1DRFYELgW2Ap4BDlLVRW3S33GcHo4/CJYNRQZU/wvsoqqbA1sAe4rItsAZwM9VdX3gOeDIIH8k8FxI/3mQcxzHcbqRhi13VVXg5fC1b9gU2AU4NKRfAnwXOBfYJ+wDXA38WkQknMdxHKcuPk7QGgr1uYtIb6zrZX3gbOBB4HlVfSuILAaGhv2hwGMAqvqWiLyAdd083UK9Hcdx/EFQh0J+7qr6tqpuAQwDtgE26uofi8g4EZkpIjOXLl3a1dM5juM4GZImManq88A0YDtggIhUWv7DgCVhfwmwDkA43h8bWI3PdZ6qjlbV0YMHD25SfcdxHCePIt4yg4E3VfV5EVkZ2A0bJJ0GHIB5zIwFJoWfTA7f/xmO3+r97Y7jLGvea104Rfrc1wYuCf3uvYArVfU6EbkPmCgipwF3ARcE+QuAy0RkIfAscHAb9HYcx2kbZXDfLOItMxfYMif9Iaz/PU5/HfhsS7RzHMfp4fTUB4HPUHUcx+kmUh8EXelK8lUhHcdxSogbd8dxnBLixt1xHKeEuHF3HMcpIW7cHcdxSogbd8dxnBLixt1xHKeEuHF3HMcpIW7cHcdxSogbd8dxnBLixt1xHKeEuHF3HMcpIW7cHcdxSogbd8dxnBLixt1xHKeEuHF3HMcpIW7cHcdxSogbd8dxnBLixt1xHKeENDTuIrKOiEwTkftEZJ6IHBfSB4rIzSKyIHyuEdJFRH4pIgtFZK6IjGr3RTiO4zidKdJyfwv4uqpuAmwLHCMimwDjgamqugEwNXwH2AvYIGzjgHNbrrXjOI5Tl4bGXVUfV9XZYf8lYD4wFNgHuCSIXQLsG/b3AS5VYzowQETWbrnmjuM4Tk2S+txFZASwJfAvYIiqPh4OPQEMCftDgccyP1sc0hzHcZxuorBxF5F+wDXA11T1xewxVVVAU/5YRMaJyEwRmbl06dKUnzqO4zgNKGTcRaQvZth/p6rXhuQnK90t4fOpkL4EWCfz82EhrROqep6qjlbV0YMHD25Wf8dxHCeHIt4yAlwAzFfVMzOHJgNjw/5YYFIm/bDgNbMt8EKm+8ZxHMfpBvoUkNke+Dxwj4jMCWnfAk4HrhSRI4FHgAPDsRuATwALgVeBI1qqseM4jtOQhsZdVf8OSI3Du+bIK3BMF/VyHMdxuoDPUHUcxykhbtwdx3FKiBt3x3GcEuLG3XEcp4S4cXccxykhbtwdx3FKiBt3x3GcEuLG3XEcp4S4cXccxykhbtwdx3FKiBt3x3GcEuLG3XEcp4S4cXccxykhbtwdx3FKiBt3x3GcEuLG3XEcp4S4cXccxykhbtwdx3FKiBt3x3GcEuLG3XEcp4Q0NO4icqGIPCUi92bSBorIzSKyIHyuEdJFRH4pIgtFZK6IjGqn8o7jOE4+RVruFwN7RmnjgamqugEwNXwH2AvYIGzjgHNbo6bjOI6TQkPjrqq3A89GyfsAl4T9S4B9M+mXqjEdGCAia7dKWcdxHKcYzfa5D1HVx8P+E8CQsD8UeCwjtzikOY7jON1IlwdUVVUBTf2diIwTkZkiMnPp0qVdVcNxHMfJ0Kxxf7LS3RI+nwrpS4B1MnLDQloVqnqeqo5W1dGDBw9uUg3HcRwnj2aN+2RgbNgfC0zKpB8WvGa2BV7IdN84juM43USfRgIi8ntgJ2BNEVkMTABOB64UkSOBR4ADg/gNwCeAhcCrwBFt0NlxHMdpQEPjrqqH1Di0a46sAsd0VSnHcRyna/gMVcdxnBLixt1xHKeEuHF3HMcpIW7cHcdxSogbd8dxnBLixt1xHKeEuHF3HMcpIW7cHcdxSogbd8dxnBLixt1xHKeEuHF3HMcpIW7cHcdxSogbd8dxnBLixt1xHKeEuHF3HMcpIW7cHcdxSogbd8dxnBLixt1xHKeEuHF3HMcpIW7cHcdxSkhbjLuI7CkiD4jIQhEZ347/cBzHcWrTcuMuIr2Bs4G9gE2AQ0Rkk1b/j+M4jlObdrTctwEWqupDqvoGMBHYpw3/4ziO49SgHcZ9KPBY5vvikOY4juN0E6KqrT2hyAHAnqr6xfD988AYVf1KJDcOGBe+fhB4IOd0awJPF/zrMsv2FD16gmxP0aMnyPYUPZY32Z6iRytk11XVwbm/UNWWbsB2wF8y308GTm7yXDNdtufo0RNke4oePUG2p+ixvMn2FD3aeX2q2pZumTuBDURkpIisABwMTG7D/ziO4zg16NPqE6rqWyLyFeAvQG/gQlWd1+r/cRzHcWrTcuMOoKo3ADe04FTnuWyP0qMnyPYUPXqCbE/RY3mT7Sl6tPP6Wj+g6jiO4yx7fPkBx3GcEuLG3XEcp4T0WOMuIu9b1jo4zSMio5a1DssTIjJQRAYuaz3eC4jImstah+6gRxj3SsXObIOAGSKyRl6FF5E+mf1+IjK63o0hIv1F5CAROSFsB4nIgDZdDiKyUYLsbtH3fiLyfRGZJyIviMhSEZkuIofXOYeIyBgR2S9sY0RECvx3PxEZlZcXIrJC9hwisrOIfF1E9sqRHRVtWwGTRWTLPCOfqq+I9M1Jq7pBRWR1EfmRiFwmIodGx86pdf6MzN6NZAqco7AOIjJcRCaKyFLgX1idfyqkjWjwPzXLrs5vjk6QzbvveonIF0TkehG5W0RmB113KnreFETkhwmyufe/iOwlIg+LyN9DfZwH/EtEFovIrl3Ub4yIrB72VxaR74nIn0XkDBHp3+C3I0PdL2QrmqqbqY7x7diAd4CHo+3N8PlQJHs48Azwb2xxsoeAqdiSB4fknPsw4EHgXODbYftNSDsskv0wMD2c6zxgjcyxGQnX82izssCkcI3DgBOA/wM2AC4Bfpjz+92BhcCNwPlhuymk7R7JnpPZ3wF4FJgWrvcTkezdlesHvgHcEfLuZuBHOeV3RzhXZXstfN7aBX13xpaveBqYAozIHJudkxfXAKcD+2JzK64BVsyTB/aLtv2BJyrf65TXGsDqdY6n6PBP4CCgdyatNzY3ZHqzZRdkToi2r4d8PAE4IZLdHpgPzAPGhDJ+MJx7u4zcRcB3w/+fBXwf2A24Bfhqjg6F7yfgl9H2K+D5yvdI9tuZ/U0wW/AwsAibDZ+VnQNsjE2ufAbYNqRvXKMOrYOth/U34FtA38yxP0Wy84A+Yf+8kCc7ABOAayPZP2X29wn6XoTNzD+8FXWz6lqKCrZzCxXvJuDDmbSHa8jeg03FHQm8CKwX0ocAc3PkHwAG1LhJ/x2l/R3YExgAnBgKr3L+uxpUxmylfDGSnVxj+zPwSiR7d/T9zvDZC7g/5zrmkzF6mfSRwPwobXZmfxowKux/gGgGHHBvZn8msHLY7xPnc6h8fwX2KlB+KfreCXwo7B8ALKDj5rwr5xxzou+nAP8ABlFtWN8ErgMuDDfZRcBL4fPCSPb9wKXAC8DbmGF9FDN0fbugw4I698SC6HvhsgvpLwF/AL6DGZsJwHOV/Uh2BmaIt8MeADuE9FHAPzJycblPD58rxmXXxP30GHA51hgbG7allf06eXF9pd5hixbeUUf2sXplFdJuBv4X2AK7l+8ABtXQeX7e/9SoB3dl9u8ARob9Nam+5wvXzXpbl4xyKzespXoVcCawGlGLPS/TgP9Ex/KM+7+B/jnp/XNuoDiTdyYYlJzCewlbG2dszvZ0JPsc8Elgx2jbCXgykr0jc3PtTeelHB7IuY4FhNZDlL4CtjpnrYo+q9axjB6bhv2b6GjFr0TG8Gfk+wE/D2U4vE75pegbl8eHsIf1vrG+4fh8oFeUdjhmVB6J0rfG3vi+nEl7uIbOtwI7hf39wnWuCpwGnNcFHSYC52Ct5feHbUxIu7LZsgtpw0NZnAGsEtJqlUnW8NRrEMyiwziPAm7PHLsv57wp99NqWMv3CuD9DfSdnad7je+3Al/C3j7nAsdjCxmOBf6ec+7YKH8ulN16OTpfBRwR9i8CRof9DQmNsho6x28tsc6F62a9LUm4OzbMoE0HnqhxfDLwI+DXoeB+hr1WTiBjCDPyY+nolvlW2CrdMofHlZHoQQBsFirkMzmV5iM1dHw4+n4jsHMN2dtz/m8G9kD4O7BhSB8MHJvz+5OBu4CTgEPDNj6knRzJvhoq+D3Yw6lisHsRGeygx91Yi/XSkF8XYa34Q+uU35ZYy3JpjeMp+s4E1orShmGv2i/lnPvHwMdz0vckp5Ucrvu4oO821DYmsZGaldm/v1kdsAfal7GH5z1huwk4mtCV00zZRb/bB3tzOKDI9QH7Rseyb3C7YG8sC7BuhTGZuvnjvPNS8H7KHN8qlMeJwKIaMs/T8ea7lPDwivUN39cB/h92/6+FGfd7sRb/xjnnngesFKV9HOs2fDxK7w9cHO6Nf2Et7oewt9jNI9m3sZ6Gl4A3gLUzdSCvUVqobtbbeuQkJhFZGWsh3JtzbHXgGEAxA78n1jJ6FDhVVR/P+c0awB50LD28BHsQPBfJHYpl4vQofTjwf6p6VCZtIPC6qr7a7HW2ChHZGLuJs9c3WVXvi+TWjX76uKq+EQYnP6aq10byvbE+8g2x7pjFWL4930AfAVZT1Re7qO/HsYfE3VH6AOAYVf1BPT2KIiJDsdb4aFX9QM7xW7CbeBrWct9JVfcP1/mAqm7YCj0a6JhUdtFvV8W6kMao6sdyju8N3BLXZRFZD9hfVX+cSROsm6LhaoYp91N0XLAH3Haq+rmc4ztGSbNU9WURGQIcoKpnN9Ktjs7HY63sv0bpW2IPsN1yfrM61q3YB1isqk8m/N8A7CHzzxrH34+90eTWzbrn7inGXUQ+gN0462BPuX8DV9QyEE3+xxrA2608Z3cgIreq6i4J8qNUdXY7dYr+bxXgK9gD91fYIOH+wP3A91X15Qa/b5m+IrIH1m2TfXBMUtWbunDO4cBPscG7OcA3VPVxMa+unVT1mjq/3QFred2rqlOiY32AI/P0BS5Q1Teb1bldBEM2WFUfjNI3U9W5Lf6fDbCHw3ON5Jv8j++o6ve78PsBjRo6rUJEhqQ8NICe0S0DHIt5Q3wb6+s9G/gBcB+hrzMjOxprQV2OPQhuxl7T7gS2zDl3ymDYtcD/AP0K6Dw76LteAdlnMa+QXQkP1Dqyc6PtHuC/le858qNytsVY98ioSHbPzP4A4IJw3iuAIQnldWP0/Uqse+wcrK/w18BHgZ8Al7VI3/6N9MVaODdg3iY7hO3gkPaLSLY31hd7KrB9dOzbRfMiR4cZmf2jsIfBBKxrZHwk+3usu2BbrLtpWNg/F/hDV8oO2AjrDrwe6y++GOvqm0HUHRHy9nTsYfws5lUyP6QNyMgdCPwnXNM8YOvs/ZCYT/FYxeXAmmF/D+wevQV4BPhss+dtIJvr1YaNDfwae8heG/Jh/Ry5t4KOR5LjtBHJpnjhDMzZFmFOIAMLX1+zlbiVG2bAeof9VYDbwv5wqgcbZmAukIdgI+wHhPRdgX/mnDtlMGwJcHWo4FcCnwFWqKHzw1hr7tGg0/GEgaAc2Qewlu0/wn/8guD1kSM7OVT0jYB1gRHhOtfFFuaP5VPcELODOueHPFg36B5XsDwjPArrE437HueET8FctiTzPfawaIu+QebfcVpGj7i/+3zMMH4NGyg8M+9/C9Td70Tfs4OTd2KtXEKdu6eIvnnHmsiL24FPY/fJI9hDTkLa1Ej2L9gYyFqZtLVC2pRsOdPRV7wN9jD4THzdGfk8IzUQ8xxaHNuAzP4dBI8q8r1JUs77Yo3tJeCtHJ1/hI0tfQ6zBT/BHtJ3ET1kMLv1KeB32ANxUsjnlXPOm+KFU9g1vG7dLCrYzi1kUsUXeA0yrl1UD5Bkb57YRzyvgqUMht0VPlcHPo+1+JaGwo59sLM320exVusTmJEaV0d2OPBNrOX/EPm+65/Bbs69w/eaBUqaG2JWj9grIP7+NvZgnJazvVbrt1S7Ecb53xZ9Q9pcMq3JTPo2VBvWuZn9Ppif8rWYW19VPaqT/3EdvDvU4UFUu5fGN/F04LNkvGuwgbSDgH91MS+y90lNr6nwvcoLK+9YTh6ujT0Yj43PmalDD9HZSFW+vxHJziPMH8AcCbJ5Mq8L532UGm+lRK6R8TWGevGPsL8G1bYoWyYrY28212KG/ooG91c9L5zCruF162bqD9qxYaPCc4HfYq2BinvRYKq9Sf6JDfJ9FmuR7BvSd4xvppB+S8jIocBXgWtCulCndZRJG4Q9cWu2KjNpvbEB3oui9FxjgbXOJ9Q4tirmFjqJqDWSI1vUDXExHRNaHiLTRUR1C/teYIMa54n9hc8npysrVNw8d7OW6xvSRmFeC/dh3XxTsO6F6cBWkWzenIHvYG9XcSu/cOsPe32uGJqH6Gjp9qP6Bh+B+aIvxcaYFoT9PxD8oLuQF9mH19Fx2Ubfp2ANjiGZtCFYy/2WTNodRN2QmAvjVOC/OTosAIYXrEMHYg+KL2Dum9dgnm4XAz/rwnlPA7apIXtGTtrdhK6PUDenZ47FD5la93V/qn3zC3vhhGOFXMPrbUnC7dwwH+YDgI0ayG2OvUbeiBnHX2B97vOI+k4zBXQlZqwuz9xsgzBPgKzs7Qn6TkyQPbOobI3r/d+CshU3xKdqHJ8QbZUug7WASyPZA4AP1jjPvkX0CbI1xxho7DZZWN/od2th3UdbEblSZmQuJ9OPnUn/IvBmlJbU+qshtwqRwY6ODyK8prciL7DxhLwH7vrAWVHaGphBrfS5P4s9FM8g08cb6mLVAx/oC/xPTvoxRC6BmWN5M1rXD//5R8zN8Vxgj66eN2XD3poewbpRHgU+GdIHU90aPzHhvMcDO9a4B26u87u6ruH1th7jLVMLEemnDbwt3iuIyEaqen8DmbpuiN2NiOymqjfXOd5WfUXkh6r6rS6e4zTMVXNGzrEzVPWkKK0XgKq+IxZqclPMZ/vZSK4ShnKJqk4NroMfwQzredoDvWViRGRgfF09DRH5GDZZ8AER2R6biTtfVa+vIT8Qm/m7ULvJG6Ye9VzD6/5uOTDuj6rq8Mz3gdjg5BJseu7JdNwQP9Rq3/UPYF4tS7BWwc8JhYu5tC2K5PthXStZl8wpqvpOJHcs8EdVfazgdeyBvWpNzf6niHxBVS8seI5OeVFAvsrVqxWugiJyhKpe1IzOIrKmZnykReRzBFdB4LeaqZCZsv4P5h3yLTrKLq+sf5mjwmGYtxSqemwkX6isUxCRfbFJM+9g3XnfAl4GPojNOPxzRvZ3WL/uKtjbZz+sz7biVTU2IzsGM0gvhpt9PNYNdR+WFy/k6LROx6IAACAASURBVLIzNsaRvb7zVXVhJHcsthbK4gbXtj3WBfcO1n1yGmYEVwAO1Bq+2jXO1emhn1IvwvFCLpkiclY4Tx/sjX9X7K1/R6xb5RsJOndqXInItVh5/alRA1REzsS6hP9R9L+we/Rf2XOLyJ5F79UeYdxF5IRah4BTVHVgRvYGbAB2dWzxn3uwbpfdsFe1faJz3465nPXH+t4vCvK7Y6+Su2RkD8Rmxs3F3KHuwAa4Phxk78nIvgC8gs1O+z1wlaourXF9P8Jm0c7GvBXOUtVfhWOzVXVURjbPQFXyYqyqrl7jeN7/xob1LGxC0qVYHy7YA+cwrJ/5uCbPO7mOzruo6qoZ2XevV0S+jQ1GX4F5HSxW1eMzsqll/Rg2WDsl/DeYR9OJAKp6SUa2Xll/Thv4bNd6IxCRuzBvrpWx/tutQ4txXezmHp2RnauqmwV/9yWYt9Xb4W3mblXdLCM7L1zzWyJyHjZj9WrMWG2uqvtFevwI67KZij3MH8aM+9HYw+CqjGyhuiwiMzC3v35Yt8m+qvp3sZU/f6Wq29fLs+hccR1KqRcHYm6vT2FdQoer6p3xeTL5tilWHkuAoar6qthKo3ep6qZd0HkJNga4Cza293vgelV9I+e3S7HunsHYmMrvVfWuGv9zLNb1NB/zrjlOVSflXV9dUvtx2rEBr2P+xnG/4gTg+Ug263a3JO9YlFbYuwa70SvrcKxJWM4AmzIdL0h0F2YMdsdalUuxEe6xWDdDVvYeOlaPG4B54fy8hg6F16wJ8imDfSmugrG/fSe/+0g2Ze2cbHnMBlYN+32p9sZILeuU9UlSyjpvcbhaKxZmr6+md0XlONbqXSOUV2UgbyWq13gpvEhVpc5l9ht5fRSqyxRcgyaTlrJgXlK9oKBLZuVaQ54+R8cCeL3JXw8nLutsmccLAqZ411VkN8RWep0X9J5AWGIkshf9wv4IbBmO4/Kur97WlgDZTTAbe7WZFR8QkS9GSb3CTNPVgH4iMkJVF4XZgivknPsdEdkQa7mvIiKjVXWmiKyPFXCnv8N8rsFaMu8DUNW54TUwi6q9vk8BpoSWQMX//qfYE7pCH1V9K/zoeRH5NHCeiFyVo/OdWIW8Iycvvptzfc9jrcOq2WuhJZvldRHZWkMrJ8PW2AM2yxBsMkk8O1CwVm6W6cCrGk3ZDjo8ECWtLDaVuxc2t+EVAFV9U0TejmSTylpVXwK+Jrae/O9E5HpqxyxIKevPUP1GcDDm3VF9YpFeoW58IZPWO0fnC7AbvDe2euRVIvIQNpFpYiR7b6Y77O5MPd4Q84GOeSfTH/7+8B+o6nPhzSBL0bqczcuTo3Pk3Xsfxd6W4y4LwYxylpR60VvDMiOqOiN0P10nIutgs6SzXC8if8OM+/nAlSIyHWt83J6j8xGYR9J/c44dEn3XoMOLwGXAZaFufhbrNpuSI/tvrCF7qohsFs55AzaYXKGXhq6YUN93Aq4Ob38N4zR0/GPBp0A7N6w/cnCNY0Oi74cAT4Ztf+x16GbslWtczu93xSYRzcdmLF6DuR89BewTyZ6B9cudQphJFtIHUtANKhxbJfp+Hfkj5acB70RpA+PfN8i7wq5epLkKXkBYnTLnvFcU1S/nt9OiLeu9FPuFJ5V19FvBXm0vr5U3CWWd8kawNZHLW0gfgXX3xOnvz5xzAOalVFWeJCxSFeRTvD4K1WXMc6OqbmIur9/MSU9ZMC+lXqS6ZG5Hx1LR62HdcQcSrd4ZjqcsCJjiXZcyd+JWYIsorQ/Wnfp20fP0iD73VEIrSNT6H/tg/VJLNGfRsBq/XxN4TlXjFgEi8glsDZG7NQz4iHk/9FXV/2bkNlR7Chf5v5UBVPW1nGNDVXVJkfO0ChFZi8yAqqo+0aLzDonOm7KAUm9sIlu8eFVTZS0F1hEqWtYZ+a2wluz1wFdUdUTBa8tdO0eaWJtEEhapkoJeHyl1ubsJ5bFStl6IyOZYt048MNwXG9j9XRf+ry0LAkqC15+IDMO6VKvuSxHZXosOyvYE4x6MzQRsFP472GSj/bFW5XF5N7KIjCbjBaB1XASlSa8IKbB4kYgMxgYl3w5yuQUoFnZrT6pXpnw+ktsI8+h5B5v593/YgNi/sQHV+Q107of16z2Uc+4VMB9uDd93xlrz87TGCHyR6wuv0+dircvKg2oY1mV0dA3D1rD8JHExKrEV9E7HVpzsl9HlQuAHmuNamPpACl0a9VYsjAe7BJuI9mnsfpudkX0LuA0biLumiKEvWt8anKOuS23ostwc61e/L5PeH+uO2RfrxlLsDXgScHqe/iLybpdkqJsbBb3z3ELz6uZ9qnpj6jUWQUTuUdUP1zk+ECDWNXN8ODan5PVQLw6nw4Ppt5XrDrJNL6xWqzwaUrSJ384NG7z5KtZPNRebGbdOSJsUye6IDTDcgvUHX4fNKrwNWCfn3Adia7+cj73SXoatBTEX2CySLbx4EdbiuwXr4nkDe1V+GHt1jtewTgn1V3hNkCDfrtB5Kdc3hyi8WUjflurlBwqXH2bAFmB9lJsUqEcp6whtgXVHzQ+63IL1f08nWsAsyPfJ7PfDFrCrWsSJtLVzUtYmKVweBfIpdiyYRke9/zzBZTLo99WMXKE1aDLHDqdgSMwGdfP0hGuLB1/3q7HtT87kOWzS40RsYHQBHV24E4kiiGED4pVB+TMw76XPYY2JeBmOwnW5aHk0zIuUStGujfoeLVXhquiYnTcS8zUHc4/Lq2ApXhEpixdNJ8zgxAaHLgn7RwFXR7Ipof4KrwkSp9Ha0Hkp11cvXFx8DYXLL8huiq0QuhAzAOPjmywjn7KOUMoD6XCKG6lm185ptDZJ4fII6SleH9l6cScdC1qtQudlDAqtQZO9nygYEjOxbhY22NjYxMV0hKvLbnkBX1Li2t6X2Z9F5/Vw4jpUuC4XLY9GWy1Pgu4mq8eldY6BZXrFB/dRbGU81PpMh1JNTa8IzIWp039lPCXeCedHbXJF7Fm0sqo+EI5XYlCiqr/FllKIddAc3d6hevQ768FzZnQszyMhy+oaXvtV9SGq8+5FEan49T6NeRCAXVssm3J9N4rI9SJykIh8JGwHBW+VuLsnpfxUVe9V1VNUdX3MkL0P+LuIVHkTAUtF5HMiMlREvoqt81LpSomvb1VV/Vd8ArXAEqtGyV/HBv33wHyUd1PVXbHW+8nR76/B3EJ3F5Grwqt7XtlDpuxV9TVVvVLNX/0DWCs5S0p5gHl93IsZnew2E2v5Z3lTLGAJmGfLK2H/v3Suj4+IyDdDV5ZdgMgQETkJe9DFvK2qT6vqw8DLGiYcaX7XV0rd/AM2uPvpaPtU5ncV5gI/VdUj4g3rNoxZU1X/oJnxOFV9W1UnYoO7WR4Tkco8mUVYbwPBYyYmpS4XLY+69BRXyEmVAQdV/XYlMfQ1xQM9M0XkAuwVfG/sdR6xgBF5F34DcJPYZKY9scV4Kv1psWH9HjBNRM7GugquEpugszPVRupBEfm/oMd+WEuwMqgTV8YfALNFZAodN8FwrLV6aiR7diYvzony4pac69tIROaGaxkhImuoubv1ovph8L+Yi+Dd2KvmzJAvHwZ+2Oz1qeqxIrIX1dGVzlbVG6LzppRfp/IJRm2GiHwdqIoohLke/hRrEc3BZreCecDErns3hofPpXSUyTpYF1pc1m+HB/zTItLJSEmVVyGo9YMfH8YiLsG6cfLIHfhTm216SZScUt8gzaX2eMwF8hrM//pWEfkL1s13UUbuICxv/yoi7wtpT2K+6wfm6PCo2GSq1YD7ReRn2JvJx4F4HC2lblYMdl6kto9HSV/D3hry+ExO2iwROQfL/2y9GIu1vrN8Ebg05OcLwBwRmYN5PcUTM1PqctHyqEuPGFBNIVTmowheDljf1ttiHinvU9VHcn5T2CsiGNGj6Bxa7k+q+pdIbgA2tbyix+mq+lIYdNpYq0OLFQr1l4pUh1/7j5pvcJdC56VeX4K+hctPRA5V1Sua+Z+CuuQ9kCbHD6TwgJ+HGalNsJu8YqQ+oqp71PmPlqyd00R9S/L6COc5lM71YpI2WMuowTnjkJh7YG8UjwCnaeQokVA3P4oFG3805z9Hq+rMLui8AjYLt6peYNGx8ryoNo50vlOrlytJqsutKI8eYdyliXUzllekC6H+pIthwdpF1hMgGO+T6FgX5LRaBqaRN0ITerQlbF2KkZKENUSCMfsi5v1yU/Y3IvJtVT2tGX27E0kMAdndpJRHdyMig1T1mYKy71PVp5L+oGjnfDs3rFVUmZ5/HjZhZAfMPfLaSLYf8H3McLyAjWpPx9aXyDt34RB3DXSMI+58hY4R7fUwL5fnMS+GD0eyhUP9NdChKiwYNm7wI8wL6NDo2DkJ545D562FBSA5G+tr/C4da7usHclmBwZ/hg1g7Yh5q8RLCVe8EZ6isTdCpaznFSzrlLB1ldBy86kTWq6JerIU69d+BPgxOaEfM7KFo0HROSzgR6JjVWEBU/IulPW5UVnPjcuaxBCQDfIp9l5KLeuiofAKl0eQ/wDm7XJq0Om3mK25Kqd+fiGzPxQbZH8Oc8aIlxQ4nQ57MRoblF8Y9Noxkh2Ysy1iOQ2zV3jdjFCYh2M37gmYH/gGWB9ZXlSjwiHuGugYe/HMy+xfT8faFjsR1vHIHE9x0Su8VkyQvyZUnH2xV8dr6IhqFeflqBpbXui8FPfUrIfPHMIDC3LD7KV4I6SWdUrYulpufePJ8bqqc964/FLWECkcDYrEsIApeVe0rEkPAZlnpAaSHw4vRd+UUHiFyyPI3Q58OeTFvdhs1nWwN8J6YSCvxNaE6oX15cehDLOeeNMIEcOCXrFXW6nC7F1FR/Sli4DRmQu/M5KNXYzuDJ+9yI+uUzjEHWmLcD0Q65B309bQuZ6LXmpYsPjhdwr2IBtEtXFPCZ2X4p76UKjQ+1O9oFR87fXcJuPFy1LLOiVsXWG3PtKMVJ6h3QwzSLFbaEo0qKSwgCl5l1jWKSEgU8LhpejbVCi8RuVRIC/iB2690Iex7Hw6eifiRkzsm9+SMHs9xVvmi8AvxJb6fBr4p9iiV4+FY1leEZEd1JYa3Rt7pUYtMELeojpZd7NHsVezH4vNBD0okk1ZhOtqEbkYe5X8o4h8DYsgswvBhTLDUrH1qadhLfdF4Zx5LnqXYi2hPHexvAGZFaVjoSpU9QdiS5HeTrWXxnzgS6q6oMD1pbin/hXzfAGYLiJD1DxJ1sLKM0uKN0JqWR+MTSY5R0QqA9UDsHw/OJJ9RES+ifmLPwnvzlY9nGq3vspyrdn/1PD9fZFslV5q4xFzqfbYmSnR+tyq+n0R+Q/WTZJlhYzMW8A4EfkO9rDO88ZJybvCZa2qfwxeX6eKyJHUd899CNhV8wc+4zxO0TdlUbSU8qicu+hCg8PElugWYLCI9NWOcZ2+kew5wA0icjrmvfcL7OG8C8HzKaPfz0TkD8DPQz5NoLY7bW1Snwbt3LD+482xboJardfNsBmnz2OBdDcM6YOBY3PkC4e4Iz3e4uFYH/vTWOv+PsxtK57BWTjUXxN59mPg4znpe1Ld+iscOg97aNUK01Y1aSZB3xWw196bsD7be7AFpo4mdCfllPVzRco6+m2jsHXZ0HLPha0qtFyQTYnZWZVnrdhICAtYI+8qE6Cq8q7ZsqZBCEgSwuGl3NekLYqWVB6kLTQ4NtoqM2zXIr/bcCfMR/+uTL3/EnXG3ShjmD0ROVozft7vJUKLF1V9QmwtkY9iXQXzlq1mtZE2RDVqUo9CEXoSz3kMFuj77pxjX9UQeKXGbxut9XMw5r56iywHYfYkMWRdG/UotChajd8mhV6UOgsNdgeyPIfZk/xITN8iTF5Q1TMj+cIhqCQ9fFfTlVdELlXVw3LSU9zjvoQN5gjWijw86LoD8GNVvSCSH0haKLqmw3fVcnuThKhGrXJNk5xQf5IQoSekfQDrJss+kK7QLviki8g5qnp02N8B60p7EGsFf0kzPvSSEGYvyG9Evl9+1WJyKe7FRWUlMWRd6sOri3WzVmSsX8ZJ2HotuaEXc34/EgtiPU/DDOEixG7LieWRFMKzpg49xLi/hM0knUdHH9nXsBsVVf1eRjYpBJWkhe8qXHmlOrScYIbt1qDz3hnZlBBb9wBjsLVGHsHcu54Q84+fpqpbRPKFQ9Gl5J3YrNf4+jbEXlnRziHg5mIeSK+GVs7vVHUPsWAEv1HVjzSTF/WQnHiyYrMD91LVx0VkG+wGPlmtn/guVd0yyotPY+MFn8BelZ/HBgyPVtXbonNvY5etd4rIJthbyv1aPeEpW9+mAV9X1dnhQXKlNh9m7yRsMbmJdA6ReDAwUVVPj/QoHJavqKwkhqxLeXgl1s3CBlsSQi8G+T+p6r5hfx/MBt2Ghcn8oapeTAHi+plYHoVDeNYltR+nHRvWJ30V1lKtLPJVKxhCUggqSArfVXm4rIL1Va6Ska0ahcf6QXeiI6Tc42F/xzwdKOYelx2Br1p8KOf6CoeiS8k7EtzewnkrDYWVozyvCumWkBexX3Un/+q8uhF9XxtzGzyWas+hewjumKG8b8vUxTgvJmD9njMxL4tbg+63YzF+a5XfrFrHKnlD8TB7/yanbzb8vsoDiTT34kKypIesmxs++2AOApX8znORTambj4W6eRgd/d1LK/uRbOFAK/F/YW+gI8N+3uKBKd51KeVROIRnva3bDHghZeyV8x/YwF8t4x5HyekXLvzMOJPC8fux16qtcgonztTClTdk/vHYoM4W9SpNXJghrZZ73Cw6/MSHZdJXivWv3ECYcRiOTf4YEdIH5eicmneF3N5Ii2qUkhdPYq24daNtBPaqH58nL0LP6uRE6MGMSWU+wBpkfI2pfiDdE+rAKtjNu3pIX5lqI/UqHQ+gl+gYZOuVc97jMY+SR7AH0FRs0sw9wIScerxuzjWvS/6KjCnuxYVkQzn/DVu35idYLNRTsFbxb3J0SHl4Fa6bJBrscHwrzGvqRGBRHbnsw3lGdCx+yBR2W04sj9j498UGVn9PzjLFNa+lqGB3bdjknp9QI4QViSGoSAvflVR5w2+GhYL7NTkzSPMqRYPrH05+C20o+V4xhUPRpeZdpjzOxCaZLK6j9yfCjbNbJq0X1R4wKXmRFOoP897YICe9L/A/UdpxmBH+LWY4Kzfe4Lju0bk1F9/gseGJH0QrhPQ1gf1ydCsaZm9PzGvjRszH/TzM+C0k34umcFi+RNmUkHUpD69m6mYhg52Rrxt6Mci8TUfr+w067MUKVD/IU0JcpuRx4RCe9bYe0eeeRRpHP2lNCKqc8F0hfTv7e50uIuthrddHMZewmp4fIvJJYHvNH9QpHGKrxrkH1sqPcLxQKLqu5J1YaLPtVPU3zV5HOE+X8qLA+QtF/gnHP4SNU9yr9SMT/QuLBfqqZOYUiC3uNE2jcZ4u6F434k6os9vQeUD1Tq3jxSFpYfkKy2Z+06huvh9AVf8jtvjZx7FG0IxIrqm6GcYnakbGCjKF60Sd6xiALdD2z6K/qXGehnksrQp7WPQp0M6NhOgnmd8MxrpbNqOOLyv2xJXM952xGWB7tfIaov/sF33fLOG322ODSvOwgdWbsaf9Y1gFjuVTzl14zZRW5RtRP3heXmFeA0nrueSVOQlBNRLLb8UacmtSvY7QRljr+nqsZXsxNpg4AzMOWdlpJETcwVqeY+gITjEmW0Y1dCx0nxSRTa2bqeWXI3N0wXOtjrXi12hFnaBg1K121uUcmcJryrz7m9QftGMjbb2RpHBjtCl8VwPZeNpySoitSiCG7bDJUTuE9FFEa9Y0ce63Qt4d2agCNsi3OCTffjW2vMg4hcMCpuRxpYwoGPmniXMXMqwkhEkkIeIONrhW6ZY5P2yVbpndc/RICZNYSDa1bibeIydE29fDf5wAnBDJpoTDTKoTpEXdaktdJrMQXCibf4fyWERO9LBaW09ZfmBNVf1DNkHtVXOiiMTBLC7ERsQfCO5px6jqGBE5CuujPSCS760dvt4HAR9V1dfEpgHPxvxNARCR/chHsFlnZGTzfPMrsvF08LlYy+wQYLKIvIINjkxU1UWRbF9VvSf8x1JV/TuAmjvdyjn/l3Lu+dhA1CHYEgx/D7KTVPW1SLZRvmWnbv8BCzyR18cXR8bZNrN/KjYz9l1XQcwllnD9KXkMCUE1Us4tIrtj08cX0DkA+Ppik+2mZMRXU9U/h9+dqhbBB+DPIvI9OvOmiAxV1SU0jrjzC2zMZVGk20gszzaO5FPuk6KySXUzsfy+R7U7dG9s8DRmc+2YuzIBi1uwKLjhTiUE5AkkBVqhI+rWalgDZ0tVfVBsaYqbsfulQrvq8n5Yfz7Y2N9xqnpjKJuzsLkCDekpxj1lvZFO4cZE5Ddh/7c1MvBFEdlUbXZXJXzXa9QO31XUSP0Qy/i3cmTj82r4/1OAU0IhHYyF2HpUM37g0W/jtS/y1vFIOfebqnodcF24GT8dZM8Wkb+o6qEZ2ZR8m0vxyDhZOoUFDH3KWVLyGNIi/6ScO8WwpoRJTIm4UwnYELOE6nVMIO0+KSqbWjdT8vhD2HLRqwLfUxvfGKuZOS7Z34rI6mqTzTqFwwxjTllS6gSkPwwqtLouV3i/qt4YzjujRgMvn6JN/HZu5K83chP5641ci/kYb49VhgtDel/yXcI2w57Al4btQezGmUn1+uezgE1r6Bi7Nt0BbFVQNnf0G3tq7xil7U3OiDjWf/vNnPSUc9eS7U+1f3BKvn2U2muvjI6+p7gKFs7jkLY6ZnTGY62h/YHrsHXK4zXoU8pvAZl+2Kjexu6bX6L2Oi1n1cj7L2PLQP8KW253oxy5k7GGzklYhJ5Dw/5d2EStWL7wfVJUtom6mVR+Ib2IO/SB2L36BczD7RqsIXgx8LNm60SQn4y55f4a8+D5WciXCVhUqLbXZWyMZjLmrbc0m+fxeettPc5bphHSRPg3aUP4LhH5IPCs5swck7AqYuZ728LFpZxbRE5U1Z8mnLtQvqUgCWEBU/K4zv/lRrBJLL+TMYMykc5vlgdjs05/1EiPotTSNxzbBDOw8fIDeZ41he+TZu6pgtfyQeAZzSz/kTlWs/xEZFUsYMgYVc2LlYuIbIAtmlY3HGYTOteKuvUocKp2jroV1+XHVfWNrtZlEdkxEpmlqi+HrqEDVPXsQtfSE4x76KP6NlZZz8BaMZX1Ub6h1X3HpUVErsVaUn/SNroMZv6vcPguqREWTCy49VewG+JXmNHbD/Mf/353XEfQY2BO8mzMA0S0C+H8xOJk5q3rcl8kV6nL/8GCqNSsy+3Utx2ErobDsdbvMDrW4/mNRss1tOj/Coehq3OOa7GW/aRuup+6rHPLKNrEb+dGWvSTwuHtgsyemf3+2ADRXGx225BIthJi6zQah9iqhGm7nwZh2hJ1WIKtOfEsNijzGcJEmCbyNQ6dlxdsYhE54btICwt2Jfb6eg42oPVrrKvmJ8BlkexszPitV0D/a7FoO4WWbSUhgg35oeVywwh2sS5/vU5dTtE3G06xptdGdH1FwyQWksW65b6LjQmchS0VvBvmqZLnurlZZr9vKPfJWP/zKpFsXn1bUKO+pdynSfdTjbyYWyPfUu6RXlg30vXY29Fs7E1wp67kW9262GwlbuVGWvSTwuHtQnp2OvH5oUKsiw1m/akLN2atMG0nEYVpS9ShsvbK6pgXzA1Yv9tF5Lu8jaqx5YXOSzEmKWHBsuvbPEHHG2HeGiIPYws3PYq51h1PmKGZc22pN2bhCDakhRGMH87nU/vhnFKXU/QtHE6xiesrGmYvLsvp4XNFouUEcup9o9i6KfUtpTGYej+l5FuKzoUfjCn5Vm/rdkNeo+LOChmyNeaZUVl3Yf2cClU4vF1ORsVTxWuGxqLxjZkSpi1Fh7wbdRDwv3HFDcdSQuelGJOUsGDZxaUujI7F6/lk8+KjWCvpiaBvvFxC0o0ZZCvLQZyJeUjUGpRLCS2X8nAuXJcT9S0cTrGJ6yskG66t4ic+iswyDeQvHJYSWzelvjUVCq/g/ZSSbyk6F34wpuRbva2nuEJ+ExsZfgdrmZwstlxsfyzobJaU8HYA7wvuXAKsLiKiIaeodkGqhNgaQOMQW49I8TBtKTpU9Quq9eH9JmwxhUPnaVr4rsJhwbBwcf1U9WVV/ULm/9fDvAhyUdW/AX8Tka9irZiDsDVT3hUJci9i3RGXicggLE7qeGzNn/ici4HPioVquxmbEJRHShjBLKO1Y9nln4vI2Oh4Sl1O0TclnGJ8DY2ur6jsN4BpIvIGdj8cAiAWUOa6HB36i80dEewt482gu4pIXO9S6lvKfZp6P6XkW4rOb4rIemo+86OwyWKo6n9z8qK/iHyGjrWZ6uVbbYo+Bbp7wypL1WJE4dgRFAhvF2QnRNvgkL4W1a+GeSG2FpAfYisO0/YstcO0FdahxvXWlCEhdF50rGH4LqrDgt2AGaiaYcFinYlmcWKTq4rWgdzF4xJ+/1GsvzLv9btwaDnME6Mya/Kh7DVRoCVVry4n6Fs4nGIT15ciK4R+5gJ186JoGxLS1yKarZtS31Lu0yC/DR1dJpuEssydQZqSF4k6VxqfC7CuyTEhfTAWhCcre3FKvtXaeoq3TBz4AiwzqgJf1Pj9Zar6+YL/tQMhEpN2nllYOT4GeEctKMOHsCnI92l1UIYxWLCGF4K3SCWyyjyiyCopOuTkRc0gIE1e37vRbrAunfVU9V5pEO0muIlug71utkznRvrmyOdGuwrHZqjqNmH/KGyexJ8wd84/axTQoqgeIjIhEj9HVZeKhUP8cVaflLqcom9U31bGfLe3JCeST+r1FZVt5j6N7qeaQU5yflezvuWct959OiEc64O9GY3BugB3w9x6f9BAj5R8a6TzdtjiaEl5EX5bs97XpOhToJ0b9tQrGvhics72cmU/59wzMvtfxF6XJmD9daDaogAABF9JREFUleMj2Ql0DsowldpBGebR0d92HjbYsUM4x7Vd0KFwXuSc+6gG5z4Wa/H8CfOS2SdzLF5DOtb5rlbonKhvXM5/blDW2b7KO+l4Q1qV6j7Qwno0qLtHdCEvUvSN69tZtepbE/lcSLaJuplyP6XUt5TzFl6Lv4v51kqdk2xczbpZVLCdG4mBLxIrWMoNlBKUISmySoIOhfOiyesrGu2mLTonnjfVmNyNdZflrdXf9PU1qLvxoFtKXqToW7i+NZPPRWSbqJsp91O77tPCa/G3K9+a0Tml3tfaesSAqtog0c9F5Krw+SS1170ZjQVaOAWbFDJHRF5T1b/WkO8lFn+0F9ZXujT85ysiEq/z8JbagmWvisiDGgIlqy2YFa/lfq90BGm+OzOosyHmXtiUDol5kXp9vTRM5FBbaGknbIB6XToWa2q3zin6bkVaWffHPDoEUBFZWy2ear+uXJ9Ux5N99xC2umCzeZGib0p9S7q+orJN1M2U+6ld9+kbIrKKWtyGrSqJYrNv8+IztDzfmtA5td7n0iOMewXt8Bz4JPZ0y5NJrWApN1BKRfgi8AuxoNtPA/8U80B5LBxrVofCedHEuZ8UkS1UdU74j5dF5FPYhJAPd5POhc+bWtaqOqLGoXcwH/lmr28INg39uShdsDVD8nQpUpdT9E2pb5B2fUllnVA3U+6ndt2nH1PV/wa9s8f6YuvRxLQr3wrr3ISNy6VHDKh2BakTAanB71bBRqEfzqStWKkIkeya2Oy0e3KOJUevqadDq6hxfV2OYtUunYuct9my7qoeInIBcJGGJW4j+Su082qabaUr9S38vnD5dbWsm7mfiujQivOm0tV864rOTdu45d24O47jONXUm6zhOI7jLKe4cXccxykhbtwdx3FKiBt3x+kiIvJ+Ebm6xrHbRGR0d+vkOG7cHacgUh2fEwBV/Y+qxoHZHWeZ0qP83B2nlYjICOA6Vd00fD8RW0HxWWzJ17ew9UgOFgvt9itgU8wH+ruqOklEDseiSvXDZhjuWO9/xNZ9uQjYHFtUrnhAY8dpIW7cnfci44GRasutDghpp2Dre38hpM0QkVvCsVFYdJwiYe++DLyqqhuLLfU7u+XaO04BvFvGeS8yF/idiHwOa72DrcQ4XkTmALcBKwHDw7GbCxp2gI9h64KgqnPDfzlOt+PG3Skzb9G5jq8UPj+JxcgcBdwZ+tIF2F9VtwjbcFWdH+Rf6TaNHadFuHF3ysyTWBSsQSKyIvAprM6vo6rTsPiY/bH+9L8AXxURARCRLZv8z9uBQ8M5NgU269olOE5zeJ+7U1pU9U0R+T4WiHsJNsDZG7g8LNgkwC9V9XkRORVbI32uiPTCouV8qom/PRe4SETmY5GCZrXgUhwnGV9bxnEcp4R4t4zjOE4J8W4ZxymIiHwYuCxK/q+qjlkW+jhOPbxbxnEcp4R4t4zjOE4JcePuOI5TQty4O47jlBA37o7jOCXEjbvjOE4J+f8qdUM/Nj3DMwAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "Best_sales_time.head(20).plot(kind = \"bar\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>len</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>event_time</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-02-09 20:10:58 UTC</th>\n",
       "      <td>429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-02-26 05:38:37 UTC</th>\n",
       "      <td>324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-02-20 14:59:05 UTC</th>\n",
       "      <td>282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-11-18 01:17:08 UTC</th>\n",
       "      <td>279</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-12-02 14:12:08 UTC</th>\n",
       "      <td>260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-09 09:06:06 UTC</th>\n",
       "      <td>257</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-11-07 12:31:32 UTC</th>\n",
       "      <td>252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-12-02 20:42:26 UTC</th>\n",
       "      <td>246</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-02-13 14:28:17 UTC</th>\n",
       "      <td>240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-14 20:24:38 UTC</th>\n",
       "      <td>234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-02-12 18:31:17 UTC</th>\n",
       "      <td>219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-02-05 21:52:16 UTC</th>\n",
       "      <td>218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-10-21 13:27:39 UTC</th>\n",
       "      <td>208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-12-15 13:58:40 UTC</th>\n",
       "      <td>199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-02-18 22:13:23 UTC</th>\n",
       "      <td>194</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-10-15 12:00:35 UTC</th>\n",
       "      <td>192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-12-04 17:12:57 UTC</th>\n",
       "      <td>188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-02-04 06:36:53 UTC</th>\n",
       "      <td>186</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-22 11:21:29 UTC</th>\n",
       "      <td>181</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-19 12:10:19 UTC</th>\n",
       "      <td>180</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         len\n",
       "event_time                  \n",
       "2020-02-09 20:10:58 UTC  429\n",
       "2020-02-26 05:38:37 UTC  324\n",
       "2020-02-20 14:59:05 UTC  282\n",
       "2019-11-18 01:17:08 UTC  279\n",
       "2019-12-02 14:12:08 UTC  260\n",
       "2020-01-09 09:06:06 UTC  257\n",
       "2019-11-07 12:31:32 UTC  252\n",
       "2019-12-02 20:42:26 UTC  246\n",
       "2020-02-13 14:28:17 UTC  240\n",
       "2020-01-14 20:24:38 UTC  234\n",
       "2020-02-12 18:31:17 UTC  219\n",
       "2020-02-05 21:52:16 UTC  218\n",
       "2019-10-21 13:27:39 UTC  208\n",
       "2019-12-15 13:58:40 UTC  199\n",
       "2020-02-18 22:13:23 UTC  194\n",
       "2019-10-15 12:00:35 UTC  192\n",
       "2019-12-04 17:12:57 UTC  188\n",
       "2020-02-04 06:36:53 UTC  186\n",
       "2020-01-22 11:21:29 UTC  181\n",
       "2020-01-19 12:10:19 UTC  180"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Best time users make purchases( to target them with recommendations and adverts)\n",
    "Best_sales_time = Products_purchased.groupby('event_time').event_time.agg([len]).sort_values(by= 'len', ascending = False)\n",
    "Best_sales_time.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x124e899a0>"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "Best_sales_time.head(30).plot(kind = \"bar\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Exclude all rows where price have value less that 1.\n",
    "ecommdf2= ecommdf[ecommdf.price >= 1]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>event_time</th>\n",
       "      <th>event_type</th>\n",
       "      <th>product_id</th>\n",
       "      <th>category_id</th>\n",
       "      <th>brand</th>\n",
       "      <th>price</th>\n",
       "      <th>user_id</th>\n",
       "      <th>user_session</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-12-01 00:00:00 UTC</td>\n",
       "      <td>remove_from_cart</td>\n",
       "      <td>5712790</td>\n",
       "      <td>1487580005268456287</td>\n",
       "      <td>f.o.x</td>\n",
       "      <td>6.27</td>\n",
       "      <td>576802932</td>\n",
       "      <td>51d85cb0-897f-48d2-918b-ad63965c12dc</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019-12-01 00:00:00 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>5764655</td>\n",
       "      <td>1487580005411062629</td>\n",
       "      <td>cnd</td>\n",
       "      <td>29.05</td>\n",
       "      <td>412120092</td>\n",
       "      <td>8adff31e-2051-4894-9758-224bfa8aec18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019-12-01 00:00:02 UTC</td>\n",
       "      <td>cart</td>\n",
       "      <td>4958</td>\n",
       "      <td>1487580009471148064</td>\n",
       "      <td>runail</td>\n",
       "      <td>1.19</td>\n",
       "      <td>494077766</td>\n",
       "      <td>c99a50e8-2fac-4c4d-89ec-41c05f114554</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019-12-01 00:00:07 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>5824148</td>\n",
       "      <td>1487580005511725929</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.56</td>\n",
       "      <td>576005683</td>\n",
       "      <td>28172809-7e4a-45ce-bab0-5efa90117cd5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2019-12-01 00:00:09 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>5773361</td>\n",
       "      <td>1487580005134238553</td>\n",
       "      <td>runail</td>\n",
       "      <td>2.62</td>\n",
       "      <td>560109803</td>\n",
       "      <td>38cf4ba1-4a0a-4c9e-b870-46685d105f95</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                event_time        event_type  product_id          category_id  \\\n",
       "0  2019-12-01 00:00:00 UTC  remove_from_cart     5712790  1487580005268456287   \n",
       "1  2019-12-01 00:00:00 UTC              view     5764655  1487580005411062629   \n",
       "2  2019-12-01 00:00:02 UTC              cart        4958  1487580009471148064   \n",
       "4  2019-12-01 00:00:07 UTC              view     5824148  1487580005511725929   \n",
       "5  2019-12-01 00:00:09 UTC              view     5773361  1487580005134238553   \n",
       "\n",
       "    brand  price    user_id                          user_session  \n",
       "0   f.o.x   6.27  576802932  51d85cb0-897f-48d2-918b-ad63965c12dc  \n",
       "1     cnd  29.05  412120092  8adff31e-2051-4894-9758-224bfa8aec18  \n",
       "2  runail   1.19  494077766  c99a50e8-2fac-4c4d-89ec-41c05f114554  \n",
       "4     NaN   5.56  576005683  28172809-7e4a-45ce-bab0-5efa90117cd5  \n",
       "5  runail   2.62  560109803  38cf4ba1-4a0a-4c9e-b870-46685d105f95  "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Drop category_code because it has over 90% NAs\n",
    "ecommdf3= ecommdf2.drop(['category_code'], axis=1)\n",
    "ecommdf3.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "#import matplotlab\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>product_id</th>\n",
       "      <th>category_id</th>\n",
       "      <th>price</th>\n",
       "      <th>user_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>product_id</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.021866</td>\n",
       "      <td>-0.030665</td>\n",
       "      <td>-0.014106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>category_id</th>\n",
       "      <td>0.021866</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.003304</td>\n",
       "      <td>0.013431</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price</th>\n",
       "      <td>-0.030665</td>\n",
       "      <td>-0.003304</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.036393</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>user_id</th>\n",
       "      <td>-0.014106</td>\n",
       "      <td>0.013431</td>\n",
       "      <td>0.036393</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             product_id  category_id     price   user_id\n",
       "product_id     1.000000     0.021866 -0.030665 -0.014106\n",
       "category_id    0.021866     1.000000 -0.003304  0.013431\n",
       "price         -0.030665    -0.003304  1.000000  0.036393\n",
       "user_id       -0.014106     0.013431  0.036393  1.000000"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ecommdf3.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>event_time</th>\n",
       "      <th>event_type</th>\n",
       "      <th>product_id</th>\n",
       "      <th>category_id</th>\n",
       "      <th>brand</th>\n",
       "      <th>price</th>\n",
       "      <th>user_id</th>\n",
       "      <th>user_session</th>\n",
       "      <th>rating</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-12-01 00:00:00 UTC</td>\n",
       "      <td>remove_from_cart</td>\n",
       "      <td>5712790</td>\n",
       "      <td>1487580005268456287</td>\n",
       "      <td>f.o.x</td>\n",
       "      <td>6.27</td>\n",
       "      <td>576802932</td>\n",
       "      <td>51d85cb0-897f-48d2-918b-ad63965c12dc</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019-12-01 00:00:00 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>5764655</td>\n",
       "      <td>1487580005411062629</td>\n",
       "      <td>cnd</td>\n",
       "      <td>29.05</td>\n",
       "      <td>412120092</td>\n",
       "      <td>8adff31e-2051-4894-9758-224bfa8aec18</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019-12-01 00:00:02 UTC</td>\n",
       "      <td>cart</td>\n",
       "      <td>4958</td>\n",
       "      <td>1487580009471148064</td>\n",
       "      <td>runail</td>\n",
       "      <td>1.19</td>\n",
       "      <td>494077766</td>\n",
       "      <td>c99a50e8-2fac-4c4d-89ec-41c05f114554</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019-12-01 00:00:07 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>5824148</td>\n",
       "      <td>1487580005511725929</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.56</td>\n",
       "      <td>576005683</td>\n",
       "      <td>28172809-7e4a-45ce-bab0-5efa90117cd5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2019-12-01 00:00:09 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>5773361</td>\n",
       "      <td>1487580005134238553</td>\n",
       "      <td>runail</td>\n",
       "      <td>2.62</td>\n",
       "      <td>560109803</td>\n",
       "      <td>38cf4ba1-4a0a-4c9e-b870-46685d105f95</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2019-12-01 00:00:18 UTC</td>\n",
       "      <td>cart</td>\n",
       "      <td>5629988</td>\n",
       "      <td>1487580009311764506</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.19</td>\n",
       "      <td>579966747</td>\n",
       "      <td>1512be50-d0fd-4a92-bcd8-3ea3943f2a3b</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2019-12-01 00:00:22 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>5807805</td>\n",
       "      <td>1487580005713052531</td>\n",
       "      <td>ingarden</td>\n",
       "      <td>4.44</td>\n",
       "      <td>576005683</td>\n",
       "      <td>28172809-7e4a-45ce-bab0-5efa90117cd5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2019-12-01 00:00:27 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>5588608</td>\n",
       "      <td>1487580008145748965</td>\n",
       "      <td>roubloff</td>\n",
       "      <td>5.40</td>\n",
       "      <td>546170008</td>\n",
       "      <td>676d9fcc-2a4f-4448-b49d-136f2e4208c1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2019-12-01 00:00:40 UTC</td>\n",
       "      <td>cart</td>\n",
       "      <td>5755170</td>\n",
       "      <td>1487580009387261981</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.79</td>\n",
       "      <td>579751441</td>\n",
       "      <td>8de492d7-0937-47ae-be2c-a7615aec2b0d</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2019-12-01 00:00:44 UTC</td>\n",
       "      <td>remove_from_cart</td>\n",
       "      <td>5650294</td>\n",
       "      <td>1487580007835370453</td>\n",
       "      <td>metzger</td>\n",
       "      <td>3.33</td>\n",
       "      <td>576802932</td>\n",
       "      <td>51d85cb0-897f-48d2-918b-ad63965c12dc</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2019-12-01 00:00:45 UTC</td>\n",
       "      <td>cart</td>\n",
       "      <td>5755170</td>\n",
       "      <td>1487580009387261981</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.79</td>\n",
       "      <td>579751441</td>\n",
       "      <td>8de492d7-0937-47ae-be2c-a7615aec2b0d</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2019-12-01 00:00:46 UTC</td>\n",
       "      <td>remove_from_cart</td>\n",
       "      <td>5692261</td>\n",
       "      <td>1487580007835370453</td>\n",
       "      <td>staleks</td>\n",
       "      <td>6.35</td>\n",
       "      <td>576802932</td>\n",
       "      <td>51d85cb0-897f-48d2-918b-ad63965c12dc</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2019-12-01 00:00:46 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>5798929</td>\n",
       "      <td>1783999068909863670</td>\n",
       "      <td>zinger</td>\n",
       "      <td>6.19</td>\n",
       "      <td>579966747</td>\n",
       "      <td>1512be50-d0fd-4a92-bcd8-3ea3943f2a3b</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2019-12-01 00:00:46 UTC</td>\n",
       "      <td>cart</td>\n",
       "      <td>5755170</td>\n",
       "      <td>1487580009387261981</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.79</td>\n",
       "      <td>579751441</td>\n",
       "      <td>8de492d7-0937-47ae-be2c-a7615aec2b0d</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2019-12-01 00:00:49 UTC</td>\n",
       "      <td>remove_from_cart</td>\n",
       "      <td>5694628</td>\n",
       "      <td>1487580007835370453</td>\n",
       "      <td>yoko</td>\n",
       "      <td>3.65</td>\n",
       "      <td>576802932</td>\n",
       "      <td>51d85cb0-897f-48d2-918b-ad63965c12dc</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2019-12-01 00:00:50 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>3936</td>\n",
       "      <td>1487580005343953762</td>\n",
       "      <td>entity</td>\n",
       "      <td>10.95</td>\n",
       "      <td>579969717</td>\n",
       "      <td>006dd2fb-ae1e-4461-985a-d4e70ca64543</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2019-12-01 00:00:52 UTC</td>\n",
       "      <td>cart</td>\n",
       "      <td>5761411</td>\n",
       "      <td>1487580007432717250</td>\n",
       "      <td>ingarden</td>\n",
       "      <td>2.86</td>\n",
       "      <td>494077766</td>\n",
       "      <td>c99a50e8-2fac-4c4d-89ec-41c05f114554</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2019-12-01 00:00:58 UTC</td>\n",
       "      <td>cart</td>\n",
       "      <td>5761411</td>\n",
       "      <td>1487580007432717250</td>\n",
       "      <td>ingarden</td>\n",
       "      <td>2.86</td>\n",
       "      <td>494077766</td>\n",
       "      <td>c99a50e8-2fac-4c4d-89ec-41c05f114554</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>2019-12-01 00:01:02 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>5706778</td>\n",
       "      <td>1487580005268456287</td>\n",
       "      <td>beautix</td>\n",
       "      <td>14.13</td>\n",
       "      <td>564257889</td>\n",
       "      <td>a4248817-8d0d-4dac-96e6-a586563308de</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>2019-12-01 00:01:11 UTC</td>\n",
       "      <td>view</td>\n",
       "      <td>5849033</td>\n",
       "      <td>1487580005092295511</td>\n",
       "      <td>uno</td>\n",
       "      <td>10.32</td>\n",
       "      <td>562651624</td>\n",
       "      <td>f8783526-2382-454b-b417-fa48d371030f</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 event_time        event_type  product_id  \\\n",
       "0   2019-12-01 00:00:00 UTC  remove_from_cart     5712790   \n",
       "1   2019-12-01 00:00:00 UTC              view     5764655   \n",
       "2   2019-12-01 00:00:02 UTC              cart        4958   \n",
       "4   2019-12-01 00:00:07 UTC              view     5824148   \n",
       "5   2019-12-01 00:00:09 UTC              view     5773361   \n",
       "6   2019-12-01 00:00:18 UTC              cart     5629988   \n",
       "7   2019-12-01 00:00:22 UTC              view     5807805   \n",
       "8   2019-12-01 00:00:27 UTC              view     5588608   \n",
       "10  2019-12-01 00:00:40 UTC              cart     5755170   \n",
       "11  2019-12-01 00:00:44 UTC  remove_from_cart     5650294   \n",
       "12  2019-12-01 00:00:45 UTC              cart     5755170   \n",
       "13  2019-12-01 00:00:46 UTC  remove_from_cart     5692261   \n",
       "14  2019-12-01 00:00:46 UTC              view     5798929   \n",
       "15  2019-12-01 00:00:46 UTC              cart     5755170   \n",
       "16  2019-12-01 00:00:49 UTC  remove_from_cart     5694628   \n",
       "17  2019-12-01 00:00:50 UTC              view        3936   \n",
       "18  2019-12-01 00:00:52 UTC              cart     5761411   \n",
       "19  2019-12-01 00:00:58 UTC              cart     5761411   \n",
       "22  2019-12-01 00:01:02 UTC              view     5706778   \n",
       "23  2019-12-01 00:01:11 UTC              view     5849033   \n",
       "\n",
       "            category_id     brand  price    user_id  \\\n",
       "0   1487580005268456287     f.o.x   6.27  576802932   \n",
       "1   1487580005411062629       cnd  29.05  412120092   \n",
       "2   1487580009471148064    runail   1.19  494077766   \n",
       "4   1487580005511725929       NaN   5.56  576005683   \n",
       "5   1487580005134238553    runail   2.62  560109803   \n",
       "6   1487580009311764506       NaN   1.19  579966747   \n",
       "7   1487580005713052531  ingarden   4.44  576005683   \n",
       "8   1487580008145748965  roubloff   5.40  546170008   \n",
       "10  1487580009387261981       NaN   2.79  579751441   \n",
       "11  1487580007835370453   metzger   3.33  576802932   \n",
       "12  1487580009387261981       NaN   2.79  579751441   \n",
       "13  1487580007835370453   staleks   6.35  576802932   \n",
       "14  1783999068909863670    zinger   6.19  579966747   \n",
       "15  1487580009387261981       NaN   2.79  579751441   \n",
       "16  1487580007835370453      yoko   3.65  576802932   \n",
       "17  1487580005343953762    entity  10.95  579969717   \n",
       "18  1487580007432717250  ingarden   2.86  494077766   \n",
       "19  1487580007432717250  ingarden   2.86  494077766   \n",
       "22  1487580005268456287   beautix  14.13  564257889   \n",
       "23  1487580005092295511       uno  10.32  562651624   \n",
       "\n",
       "                            user_session  rating  \n",
       "0   51d85cb0-897f-48d2-918b-ad63965c12dc       1  \n",
       "1   8adff31e-2051-4894-9758-224bfa8aec18       2  \n",
       "2   c99a50e8-2fac-4c4d-89ec-41c05f114554       3  \n",
       "4   28172809-7e4a-45ce-bab0-5efa90117cd5       2  \n",
       "5   38cf4ba1-4a0a-4c9e-b870-46685d105f95       2  \n",
       "6   1512be50-d0fd-4a92-bcd8-3ea3943f2a3b       3  \n",
       "7   28172809-7e4a-45ce-bab0-5efa90117cd5       2  \n",
       "8   676d9fcc-2a4f-4448-b49d-136f2e4208c1       2  \n",
       "10  8de492d7-0937-47ae-be2c-a7615aec2b0d       3  \n",
       "11  51d85cb0-897f-48d2-918b-ad63965c12dc       1  \n",
       "12  8de492d7-0937-47ae-be2c-a7615aec2b0d       3  \n",
       "13  51d85cb0-897f-48d2-918b-ad63965c12dc       1  \n",
       "14  1512be50-d0fd-4a92-bcd8-3ea3943f2a3b       2  \n",
       "15  8de492d7-0937-47ae-be2c-a7615aec2b0d       3  \n",
       "16  51d85cb0-897f-48d2-918b-ad63965c12dc       1  \n",
       "17  006dd2fb-ae1e-4461-985a-d4e70ca64543       2  \n",
       "18  c99a50e8-2fac-4c4d-89ec-41c05f114554       3  \n",
       "19  c99a50e8-2fac-4c4d-89ec-41c05f114554       3  \n",
       "22  a4248817-8d0d-4dac-96e6-a586563308de       2  \n",
       "23  f8783526-2382-454b-b417-fa48d371030f       2  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#In order to build the recommendation model, even_type will be ranked in order of interest as ratings and stored in a new column. 'remove_from_cart':1, 'view':2, 'cart': 3, 'purchase': 3})\n",
    "\n",
    "ecommdf3['rating']= ecommdf3['event_type'].map({'remove_from_cart':1, 'view':2, 'cart': 3, 'purchase': 3})\n",
    "ecommdf3.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "ecommrdf = ecommdf3.drop([ 'price','event_time', 'event_type','category_id','brand', 'user_session'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>product_id</th>\n",
       "      <th>user_id</th>\n",
       "      <th>rating</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5712790</td>\n",
       "      <td>576802932</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5764655</td>\n",
       "      <td>412120092</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4958</td>\n",
       "      <td>494077766</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5824148</td>\n",
       "      <td>576005683</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5773361</td>\n",
       "      <td>560109803</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   product_id    user_id  rating\n",
       "0     5712790  576802932       1\n",
       "1     5764655  412120092       2\n",
       "2        4958  494077766       3\n",
       "4     5824148  576005683       2\n",
       "5     5773361  560109803       2"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ecommrdf.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 288x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.matshow(ecommrdf.corr())\n",
    "plt.xticks(range(len(ecommrdf.columns )), ecommrdf.columns)\n",
    "plt.yticks(range(len(ecommrdf.columns)), ecommrdf.columns)\n",
    "plt.colorbar()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [

   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
